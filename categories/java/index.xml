<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Blog - renyijiu</title>
    <link>https://blog.renyijiu.com/categories/java/</link>
    <description>Recent content in Java on Blog - renyijiu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Live For Dream, Dream For Love.</copyright>
    <lastBuildDate>Tue, 14 Apr 2020 14:27:18 +0800</lastBuildDate>
    
	<atom:link href="https://blog.renyijiu.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java延时任务方案</title>
      <link>https://blog.renyijiu.com/post/java%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%96%B9%E6%A1%88/</link>
      <pubDate>Tue, 14 Apr 2020 14:27:18 +0800</pubDate>
      
      <guid>https://blog.renyijiu.com/post/java%E5%BB%B6%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%96%B9%E6%A1%88/</guid>
      <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;延时任务在日常业务中的使用是比较常见的。例如对于电商而言常见的场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当订单一直处于未支付的状态，需要在一定时间后关闭订单，退还库存。&lt;/li&gt;
&lt;li&gt;订单完成15天后未评价自动评价等等&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于我们目前的业务而言，主要的应用场景是与外部系统接口的对接使用上，例如风控、大数据、信审等系统（大部分都是异步逻辑，调用 -&amp;gt; 等待回调）。因为我们要保证流程最大成功率的流转（当然谁也没法保证100%的成功），防止用户流程停滞产生卡单。但是由于网络环境的不可控性，短时间内可能存在波动，如果使用简单的立即重试逻辑，经常出现连续的失败，且可能对目标系统产生一定的负载压力。对此种情况，可能简单的延时30秒后重试就成功了。所以延时任务的需求就出来了，那么有哪些常见的方案呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java中字符串的正则替换</title>
      <link>https://blog.renyijiu.com/post/java%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AD%A3%E5%88%99%E6%9B%BF%E6%8D%A2/</link>
      <pubDate>Mon, 26 Aug 2019 16:40:13 +0800</pubDate>
      
      <guid>https://blog.renyijiu.com/post/java%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%AD%A3%E5%88%99%E6%9B%BF%E6%8D%A2/</guid>
      <description>&lt;p&gt;最近有个需求中间过程比较复杂，再三考虑决定使用正则表达式替换逻辑去简化复杂度，但是在处理的过程中发现正则表达式全局替换特定匹配组并没有很好的现成方法，所以记录下自己的解决方案。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot]读取Excel文件</title>
      <link>https://blog.renyijiu.com/post/spring-boot%E8%AF%BB%E5%8F%96excel%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 18 Aug 2019 20:30:10 +0800</pubDate>
      
      <guid>https://blog.renyijiu.com/post/spring-boot%E8%AF%BB%E5%8F%96excel%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;最近有一个需求，需要读取上传的Excel然后批量导入相关的数据，因为在Java上开始也没有接触过如何处理Excel文件，另外在处理这个需求的时候也碰到了一些稀奇的问题，所以记录一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot]insert not found问题</title>
      <link>https://blog.renyijiu.com/post/spring-bootinsert_not_found/</link>
      <pubDate>Wed, 14 Aug 2019 18:48:09 +0800</pubDate>
      
      <guid>https://blog.renyijiu.com/post/spring-bootinsert_not_found/</guid>
      <description>&lt;p&gt;个人项目中编写了一个简单的注册接口，但是在过程中遇到了几个小问题，这里记录一下。真所谓万事开头难，一个简单的接口，搭建项目碰到了各种小问题😂。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Spring Boot]数据库insert错误</title>
      <link>https://blog.renyijiu.com/post/spring-boot%E6%95%B0%E6%8D%AE%E5%BA%93insert%E9%94%99%E8%AF%AF/</link>
      <pubDate>Tue, 13 Aug 2019 12:18:07 +0800</pubDate>
      
      <guid>https://blog.renyijiu.com/post/spring-boot%E6%95%B0%E6%8D%AE%E5%BA%93insert%E9%94%99%E8%AF%AF/</guid>
      <description>&lt;p&gt;开始写Java也有两个多月了，虽然深度参与了一个项目（基于spring-boot对一个Ruby项目进行重构，使用Java重新实现），但是因为基础框架是同事搭建的，所以可能对框架其中的一些东西不甚了解，更加偏向于业务的深度。所以就决定自己从零写一个小项目，尝试去体验spring-boot的整体开发流程。&lt;/p&gt;
&lt;p&gt;当然一开始就碰到了各种小问题，也都通过查资料等解决了，所以决定记录一下，大部分问题可能都很简单，但可能其他人在开始学习时也会遇到一样的问题呢，留个思路在网上，万一帮助了其他新人也是极好的。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>